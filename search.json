[
  {
    "objectID": "train.html",
    "href": "train.html",
    "title": "train",
    "section": "",
    "text": "train_tree_models\n\n train_tree_models (df_train:pandas.core.frame.DataFrame,\n                    df_test:pandas.core.frame.DataFrame, target:str,\n                    folds:int, cat_features:List, num_features:List,\n                    seed:int)\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf_train\nDataFrame\ntrain dataset\n\n\ndf_test\nDataFrame\ntest dataset\n\n\ntarget\nstr\ntarget variable\n\n\nfolds\nint\ncross-validation number of folds\n\n\ncat_features\nList\ncategorical features\n\n\nnum_features\nList\nnumeric features\n\n\nseed\nint\nseed\n\n\n\n\n\nBasic usage\nFirst, load the analytical base table:\n\nfrom pathlib import Path\npath = Path('..')\ndatasets_path = path/'datasets'\n\ndf = pd.read_csv(datasets_path/'churn_abt.csv')\n\n\ndf\n\n\n\n\n\n  \n    \n      \n      data_ref_safra\n      seller_id\n      uf\n      tot_orders_12m\n      tot_items_12m\n      tot_items_dist_12m\n      receita_12m\n      recencia\n      nao_revendeu_next_6m\n    \n  \n  \n    \n      0\n      2018-01-01\n      0015a82c2db000af6aaaf3ae2ecb0532\n      SP\n      3\n      3\n      1\n      2685.00\n      74\n      1\n    \n    \n      1\n      2018-01-01\n      001cca7ae9ae17fb1caed9dfb1094831\n      ES\n      171\n      207\n      9\n      21275.23\n      2\n      0\n    \n    \n      2\n      2018-01-01\n      002100f778ceb8431b7a1020ff7ab48f\n      SP\n      38\n      42\n      15\n      781.80\n      2\n      0\n    \n    \n      3\n      2018-01-01\n      003554e2dce176b5555353e4f3555ac8\n      GO\n      1\n      1\n      1\n      120.00\n      16\n      1\n    \n    \n      4\n      2018-01-01\n      004c9cd9d87a3c30c522c48c4fc07416\n      SP\n      130\n      141\n      75\n      16228.88\n      8\n      0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5364\n      2018-03-01\n      ff82e8873fba613f2261a9acc896fd84\n      MG\n      4\n      4\n      3\n      124.60\n      12\n      1\n    \n    \n      5365\n      2018-03-01\n      ffc470761de7d0232558ba5e786e57b7\n      SP\n      5\n      5\n      5\n      385.59\n      0\n      0\n    \n    \n      5366\n      2018-03-01\n      ffdd9f82b9a447f6f8d4b91554cc7dd3\n      PR\n      11\n      12\n      8\n      1450.20\n      7\n      0\n    \n    \n      5367\n      2018-03-01\n      ffeee66ac5d5a62fe688b9d26f83f534\n      SP\n      13\n      13\n      3\n      1709.87\n      0\n      0\n    \n    \n      5368\n      2018-03-01\n      fffd5413c0700ac820c7069d66d98c89\n      SP\n      33\n      34\n      22\n      5488.60\n      14\n      0\n    \n  \n\n5369 rows Ã— 9 columns\n\n\n\nSplit into train and test or out of time datasets:\n\ndf_train = df.query('data_ref_safra < \"2018-03-01\"')\ndf_oot = df.query('data_ref_safra == \"2018-03-01\"')\n\nGet features metadata and types:\n\nkey_vars = ['data_ref_safra', 'seller_id']\ntarget = 'nao_revendeu_next_6m'\nnum_vars = [ var for var in df.select_dtypes(include='number').columns.tolist() if var not in [target] ]\ncat_vars = [var for var in df.select_dtypes(exclude='number').columns.tolist() if var not in key_vars]\n\nTrain based tree models:\n\ntrain_tree_models(df_train, df_oot, target=target, folds=5, cat_features=cat_vars, num_features=num_vars, seed=42)\n\n{'dt': {'auc': {'train': 0.9139680595991275, 'test': 0.8968114296299949}},\n 'rf': {'auc': {'train': 0.9072972070544887, 'test': 0.8964968670043654}}}"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mltree",
    "section": "",
    "text": "pip install mltree"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "mltree",
    "section": "How to use",
    "text": "How to use\nFirst, load the analytical base table:\n\nfrom mltree.train import train_tree_models\n\n\nimport pandas as pd\nfrom pathlib import Path\n\npath = Path('..')\ndatasets_path = path/'datasets'\n\ndf = pd.read_csv(datasets_path/'churn_abt.csv')\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      data_ref_safra\n      seller_id\n      uf\n      tot_orders_12m\n      tot_items_12m\n      tot_items_dist_12m\n      receita_12m\n      recencia\n      nao_revendeu_next_6m\n    \n  \n  \n    \n      0\n      2018-01-01\n      0015a82c2db000af6aaaf3ae2ecb0532\n      SP\n      3\n      3\n      1\n      2685.00\n      74\n      1\n    \n    \n      1\n      2018-01-01\n      001cca7ae9ae17fb1caed9dfb1094831\n      ES\n      171\n      207\n      9\n      21275.23\n      2\n      0\n    \n    \n      2\n      2018-01-01\n      002100f778ceb8431b7a1020ff7ab48f\n      SP\n      38\n      42\n      15\n      781.80\n      2\n      0\n    \n    \n      3\n      2018-01-01\n      003554e2dce176b5555353e4f3555ac8\n      GO\n      1\n      1\n      1\n      120.00\n      16\n      1\n    \n    \n      4\n      2018-01-01\n      004c9cd9d87a3c30c522c48c4fc07416\n      SP\n      130\n      141\n      75\n      16228.88\n      8\n      0\n    \n  \n\n\n\n\nSplit into train and test or out of time datasets:\n\ndf_train = df.query('data_ref_safra < \"2018-03-01\"')\ndf_oot = df.query('data_ref_safra == \"2018-03-01\"')\n\nGet features metadata and types:\n\nkey_vars = ['data_ref_safra', 'seller_id']\ntarget = 'nao_revendeu_next_6m'\nnum_vars = [ var for var in df.select_dtypes(include='number').columns.tolist() if var not in [target] ]\ncat_vars = [var for var in df.select_dtypes(exclude='number').columns.tolist() if var not in key_vars]\n\nTrain based tree models:\n\ntrain_tree_models(df_train, df_oot, target=target, folds=5, cat_features=cat_vars, num_features=num_vars, seed=42)\n\n{'dt': {'auc': {'train': 0.9139680595991275, 'test': 0.8968114296299949}},\n 'rf': {'auc': {'train': 0.9072972070544887, 'test': 0.8964968670043654}}}"
  }
]